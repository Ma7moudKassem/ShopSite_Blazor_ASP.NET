@using ShopSite_Blazor.Client
@using ShopSite_Blazor.Client.Services
@using ShopSite_Blazor.Client.Services.ProductSevice
@using ShopSite_Blazor.Shared
@inject IProductService ProductService
@implements IDisposable
@if (ProductService.Products == null || ProductService.Products.Count == 0 )
{
    <span>Loading Gammed...</span>
}
else
{
    <ul class="list-unstyled">

    @foreach (var product in ProductService.Products)
    {
        <li class="media">
            <div class="media-img-wrapper">
                <a href="/product/@product.Id"><img class="media-img" src="@product.ImageUrl"  alt="@product.Title"></a>
            </div>
            <div class="media-body">
                <a href="/product/@product.Id">
                    <h4 class="mb-0">@product.Title</h4>
                </a> 
             <p>@product.Description</p>
            <h5 class="price">
                <!--@product.Price-->
                </h5>
            </div>
           
        </li>
    }
</ul>  
}
@code {



    protected override void OnInitialized()
    {

        ProductService.ProductChange += StateHasChanged;
    }

    public void Dispose()
    {
      ProductService.ProductChange -= StateHasChanged;  
    }


}
